//Представьте что вы работаете в большой компании где используется модульная архитектура.
//Ваш коллега написал модуль с какой-то логикой (вы не знаете) и передает в вашу программу какие-то данные.
//Вы же пишете функцию которая считывает две переменных типа string ,
//а возвращает число типа int64 которое нужно получить сложением этих строк.
//
//
//Но не было бы так все просто, ведь ваш коллега не пишет на Go, и он зол из-за того что гоферам платят больше.
//Поэтому он решил подшутить над вами и подсунул вам подвох.
//Он придумал вставлять мусор в строки перед тем как вызывать вашу функцию.
//
//
//Поэтому предварительно вам нужно убрать из них мусор и конвертировать в числа.
//Под мусором имеются ввиду лишние символы и спец знаки.
//Разрешается использовать только определенные пакеты: fmt, strconv, unicode, strings,  bytes.
//Они уже импортированы, вам ничего импортировать не нужно!
//
//Считывать и выводить ничего не нужно!
//
//Ваша функция должна называться adding() !
//
//Считайте что функция и пакет main уже объявлены!

func adding(str1, str2 string) int64 {
	rs1 := []rune(str1)
	rs2 := []rune(str2)
	var res1, res2 string

	for i := range rs1 {
		if unicode.IsDigit(rs1[i]) {
			res1 += string(rs1[i])
		}
	}
	for i := range rs2 {
		if unicode.IsDigit(rs2[i]) {
			res2 += string(rs2[i])
		}
	}
	result1, _ := strconv.ParseInt(res1, 10, 64)
	result2, _ := strconv.ParseInt(res2, 10, 64)
	return result1 + result2
}
